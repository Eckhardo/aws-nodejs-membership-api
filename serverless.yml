service: aws-nodejs-membership-api

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  timeout: 5
  endpointType: regional
  environment:
    IS_OFFLINE: ${self:custom.isOffline}
      CONFIG_USER_TABLE_OFFLINE: ${self:custom.tableNames.membership}${self:provider.stage}
    CONFIG_USER_TABLE: ${self:custom.UserTable.name}
    CONFIG_DYNAMODB_ENDPOINT: ${self:custom.endpoints.dynamodb-url}
    HASH_KEY_PREFIX_USER: user_
    SORT_KEY_USER_VALUE: profile
    HASH_KEY_PREFIX_MEMBERSHIP: membership_
    SORT_KEY_MEMBERSHIP_VALUE: meta
    SORT_KEY_PREFIX_MEMBERSHIP_MEMBER: membershipMember_
  iamRoleStatements:
    - ${file(resources/iam/iamMembershipTable.yml):MembershipTableIAM}
custom:
  UserTable:
    arn: !GetAtt UserTable.Arn
    name: !Ref UserTable
  offlineTableName:
    membership: aige-membership
  endpoints:
    dynamodb-url: 'http://localhost:8000'
  isOffline: false
  dynamodb:
    start:
      migrate: true
      seed: true
    stages:
      - dev
    seed:
      domain:
        sources:
          - table:  ${self:custom.offlineTableName.membership}-${self:provider.stage}
            rawsources: [./testdata/seeddata/aige-user.json]

functions:
  - ${file(resources/lambda/user/lambdas.yml)}
  - ${file(resources/lambda/membershipMember/lambdas.yml)}
  - ${file(resources/lambda/membership/lambdas.yml)}
resources:
  Resources:
    UserTable: ${file(resources/dynamodb/user/dynamodb.yml):UserTable}


package:
  exclude:
    - .dynamodb/**
    - node_modules/**
  include:
    - node_modules/underscore/**
    - node_modules/uuid/**

plugins:
  - serverless-dynamodb-local
  - serverless-pseudo-parameters
  - serverless-offline # should be last in list
